---
- hosts: localhost
  gather_facts: False

  roles:
  - openshift_client_python

  tasks:

  - name: Set a fact to be used in script
    set_fact:
      op_types: "pods"

  - name: Await ingress
    openshift_client_python:
      # Default project scope unless overridden with oc.project
      project: 'openshift-monitoring'
      # Timeout applies to overall script / all oc interactions must complete
      timeout: 15

      vars:
        some_var_name: 'abc'
        another: 5

      script: |
        print('You can use an arg: {} and {}'.format(vars['some_var_name'], vars['another']))

        # This example shows use of ansible facts
        new_facts.pods = oc.selector("{{op_types}}").qnames()

        oc.selector('route/prometheus-k8s').until_all(1, oc.status.is_route_admitted)

    register: result

  - name: Show tracking result (all oc interactions)
    debug:
      msg: "{{result}}"

  - name: Use those facts
    openshift_client_python:
      timeout: 60
      script: |
        with oc.project('openshift-monitoring'):

          def print_phase(pod_apiobj):
            print('Phase for {} = {}'.format(pod_apiobj.qname(), pod_apiobj.model.status.phase))

          oc.selector({{pods}}).for_each(print_phase)


